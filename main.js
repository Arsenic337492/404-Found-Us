const photoInput = document.getElementById('photo-input');
const preview = document.getElementById('preview');
const result = document.getElementById('result');
const dropZone = document.getElementById('drop-zone');
const clearBtn = document.getElementById('clear-btn');
const spinner = document.getElementById('spinner');

const MAX_SIZE_MB = 5;

function showSpinner(show) {
    spinner.style.display = show ? 'block' : 'none';
}

function validateFile(file) {
    if (!file.type.startsWith('image/')) {
        result.textContent = '–û—à–∏–±–∫–∞: –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.';
        return false;
    }
    if (file.size > MAX_SIZE_MB * 1024 * 1024) {
        result.textContent = `–û—à–∏–±–∫–∞: –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ ‚Äî ${MAX_SIZE_MB} –ú–ë.`;
        return false;
    }
    return true;
}

function showPreview(file) {
    preview.innerHTML = '';
    result.textContent = '';
    if (!validateFile(file)) return;
    const img = document.createElement('img');
    img.src = URL.createObjectURL(file);
    img.onload = () => URL.revokeObjectURL(img.src);
    preview.appendChild(img);
    clearBtn.style.display = 'inline-block';
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏–Ω–Ω–µ—Ä, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    // showSpinner(true);
    // setTimeout(() => { showSpinner(false); result.textContent = '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å.'; }, 1200);
}

photoInput.addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (file) showPreview(file);
});

clearBtn.addEventListener('click', function() {
    photoInput.value = '';
    preview.innerHTML = '';
    result.textContent = '';
    clearBtn.style.display = 'none';
});

dropZone.addEventListener('dragover', function(e) {
    e.preventDefault();
    dropZone.classList.add('dragover');
});

dropZone.addEventListener('dragleave', function(e) {
    dropZone.classList.remove('dragover');
});

dropZone.addEventListener('drop', function(e) {
    e.preventDefault();
    dropZone.classList.remove('dragover');
    const file = e.dataTransfer.files[0];
    if (file) {
        photoInput.value = '';
        showPreview(file);
    }
});

// Tooltip –¥–ª—è drop-zone
dropZone.addEventListener('mouseenter', () => {
    dropZone.title = '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –≤—ã—à–µ';
});
dropZone.addEventListener('mouseleave', () => {
    dropZone.title = '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—é–¥–∞';
});

// Supabase config (–æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º)
const SUPABASE_URL = "https://clpvctamagdfrmgswdta.supabase.co";
const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNscHZjdGFtYWdkZnJtZ3N3ZHRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc3NDgwNTEsImV4cCI6MjA3MzMyNDA1MX0.7gpiGlT6B5LOtnRcasA8sbmnTWI2ZBJcZb66lxQg4gQ";
const supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_KEY);

// –ü—Ä–∏–≤—è–∑–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏ –ø–µ—Ä–≤–∏—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
navLogoutBtn.addEventListener('click', async () => {
    await supabase.auth.signOut();
    checkAuth();
});

checkAuth();

// —Ñ–ª–∞–≥–∏ –ø–æ –∫–æ–¥—É —Å—Ç—Ä–∞–Ω—ã (emoji). –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å.
const COUNTRY_FLAGS = {
    '+7': 'üá∑üá∫',
    '+1': 'üá∫üá∏',
    '+44': 'üá¨üáß',
    // –¥–æ–±–∞–≤—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
};

const phoneFlagEl = document.getElementById('auth-phone-flag');

// –û–±–Ω–æ–≤–ª—è—Ç—å —Ñ–ª–∞–≥ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å–µ–ª–µ–∫—Ç–∞
function updatePhoneFlag() {
    const code = (phoneCodeSelect.value || '+7');
    phoneFlagEl.textContent = COUNTRY_FLAGS[code] || 'üåê';
}
phoneCodeSelect.addEventListener('change', () => {
    updatePhoneFlag();
    // –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–æ–¥–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π –≤–≤–æ–¥
    formatPhoneInput();
});
// initial
updatePhoneFlag();

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏ –Ω–æ–º–µ—Ä–∞ –≤ —Å–µ–∫—Ü–∏–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ 3-3-4)
function formatPhoneInput() {
    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞ –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º: –±—É–¥—É—â–µ–µ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å
    const raw = (authPhone.value || '').replace(/\D/g, '');
    // –≤—ã–±–µ—Ä–∏ —à–∞–±–ª–æ–Ω: –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º [3,3,4], –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ —Å—Ç—Ä–∞–Ω–µ
    const code = (phoneCodeSelect.value || '+7');
    let groups = [3,3,4];
    // –¥–æ–ø—É—Å—Ç–∏–º, –¥–ª—è +44 —Ö–æ—Ç–∏–º [4,3,4] (–ø—Ä–∏–º–µ—Ä)
    if (code === '+44') groups = [4,3,4];
    if (code === '+1') groups = [3,3,4];
    if (code === '+7') groups = [3,3,4];

    let remaining = raw;
    const parts = [];
    for (let i = 0; i < groups.length && remaining.length > 0; i++) {
        const take = Math.min(groups[i], remaining.length);
        parts.push(remaining.slice(0, take));
        remaining = remaining.slice(take);
    }
    // –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å —Ü–∏—Ñ—Ä—ã, –¥–æ–±–∞–≤—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫—É—Å–æ–∫ —Å –ø—Ä–æ–±–µ–ª–æ–º
    if (remaining.length > 0) parts.push(remaining);

    // —Å–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫—É: –ø–µ—Ä–≤—ã–µ —á–∞—Å—Ç—å –≤ —Å–∫–æ–±–∫–∏, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    let formatted = '';
    if (parts.length > 0) {
        // –µ—Å–ª–∏ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 1 –±–ª–æ–∫ ‚Äî —Å—Ç–∞–≤–∏–º –≤ —Å–∫–æ–±–∫–∏ –ø–µ—Ä–≤—ã–π –±–ª–æ–∫
        formatted = parts[0];
        if (parts.length > 1) {
            formatted = `(${parts[0]}) ${parts.slice(1).join(' ')}`;
        } else {
            // –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫—É—Å–æ–∫ ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ —Å–∫–æ–±–æ–∫, –Ω–æ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ (xxx)
            formatted = parts[0];
        }
    }
    // –∑–∞–ø–∏—Å–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç –≤ –ø–æ–ª–µ
    authPhone.value = formatted;
}

// —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –≤–≤–æ–¥–µ / –≤—Å—Ç–∞–≤–∫–µ
authPhone.addEventListener('input', () => {
    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º cursor –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º: —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Å–µ–≥–¥–∞ (–º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å caret ‚Äî –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è MVP —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
    formatPhoneInput();
});

// –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ/blur –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
authPhone.addEventListener('focus', () => {
    // —É–±—Ä–∞—Ç—å –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –Ω–æ –æ—Å—Ç–∞–≤–∏–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    formatPhoneInput();
});
